extend type Query {
  polls: [Poll!]
}

extend type Mutation {
  createPoll(input: PollInput!): [Poll!]!
  updatePoll(input: PollInput!): Poll!
  deletePoll(id: String): Boolean!
  enablePollExtension: Boolean!
}

type Poll {
  id: String!
  mode: String!
  description: String!
  options: [String!]
  status: PollStatus!
  pollMessageData: PollMessageData
}

type PollMessageData {
  messageId: String!
  channelId: String!
}

input PollInput {
  id: String!
  mode: String!
  description: String!
  options: [String!]
  status: PollStatus!
  pollMessageData: PollMessageDataInput
}

input PollMessageDataInput {
  messageId: String!
  channelId: String!
}

enum PollStatus {
  New
  Posted
  Ended
}